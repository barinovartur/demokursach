from pyrogram import Client
import schedule
import time
import datetime
import json

# –ß—Ç–µ–Ω–∏–µ API –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
def read_api_credentials(file_path):
    try:
        with open(file_path, 'r') as f:
            line = f.readline().strip()
            api_id, api_hash = line.split(":")
            return int(api_id), api_hash
    except Exception as e:
        print(f"Failed to read API credentials. Error: {e}")
        exit(1)

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
def write_log(username, flag, status, error=None):
    """
    –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ª–æ–≥–∏ –æ–± –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤ —Ñ–∞–π–ª logs.json –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –≤—Ç–æ—Ä–æ–º—É –±–æ—Ç—É.
    """
    log_entry = {
        "time": datetime.datetime.now().isoformat(),
        "username": username,
        "flag": flag,
        "status": status,
        "error": error
    }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON-–ª–æ–≥
    try:
        with open('logs.json', 'a') as log_file:
            log_file.write(json.dumps(log_entry) + "\n")
    except Exception as e:
        print(f"Failed to write log to file. Error: {e}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –≤—Ç–æ—Ä–æ–º—É –±–æ—Ç—É
    send_log_to_bot(log_entry)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ –≤—Ç–æ—Ä–æ–º—É –±–æ—Ç—É
def send_log_to_bot(log_entry):
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫–æ –≤—Ç–æ—Ä–æ–º—É –±–æ—Ç—É
        with Client('log_bot', api_id, api_hash, bot_token=second_bot_token) as log_app:
            message = f"""
üìã **–õ–æ–≥ —Å–æ–æ–±—â–µ–Ω–∏—è:**
üïí –í—Ä–µ–º—è: {log_entry['time']}
üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {log_entry['username']}
üè∑Ô∏è –§–ª–∞–≥: {log_entry['flag']}
üìå –°—Ç–∞—Ç—É—Å: {log_entry['status']}
‚ùó –û—à–∏–±–∫–∞: {log_entry['error'] or '–ù–µ—Ç'}
"""
            log_app.send_message(second_bot_chat_id, message)
    except Exception as e:
        print(f"Failed to send log to bot. Error: {e}")

# –ó–∞–≥—Ä—É–∑–∫–∞ API –¥–∞–Ω–Ω—ã—Ö
api_credentials_file = 'C:/Users/Comp/PycharmProjects/pythonProject4/venv/api_credentials.txt'
api_id, api_hash = read_api_credentials(api_credentials_file)

# –¢–æ–∫–µ–Ω –≤—Ç–æ—Ä–æ–≥–æ –±–æ—Ç–∞ –∏ ID —á–∞—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
second_bot_token = "7858171694:AAG-r3buBbrLZ7HdlNrHy0YkUPo8LdnFKos"  # –¢–æ–∫–µ–Ω –≤—Ç–æ—Ä–æ–≥–æ –±–æ—Ç–∞
second_bot_chat_id = "1002342514963"  # ID —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ª–æ–≥–∏

# –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤
messages = {
    "steam": "–ü—Ä–∏–≤–µ—Ç! –ó–¥–µ—Å—å –Ω–æ–≤–æ—Å—Ç–∏ –æ Steam –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö.",
    "crypto": "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –£–∑–Ω–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Ç—Ä–µ–Ω–¥—ã –∏–∑ –º–∏—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.",
    "default": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£ –Ω–∞—Å –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤–∞—Å."
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
def send_messages():
    """
    –ß–∏—Ç–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ª–æ–≥.
    """
    print("Starting send_messages")
    try:
        with open('C:/Users/Comp/PycharmProjects/pythonProject4/venv/chats.txt', 'r') as f:
            links_and_flags = [line.strip().split(":") for line in f if line.strip()]
    except FileNotFoundError:
        print("Error: File chats.txt not found.")
        return
    except Exception as e:
        print(f"Failed to read chat links and flags. Error: {e}")
        return

    with Client('my_new_account', api_id, api_hash) as app:
        for entry in links_and_flags:
            if len(entry) != 2:
                write_log("N/A", "N/A", "FAIL", "Invalid entry format")
                print(f"Invalid entry format: {entry}")
                continue

            link, flag = entry
            username = link.split('/')[-1]  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ username –∏–∑ —Å—Å—ã–ª–∫–∏
            message = messages.get(flag, messages["default"])  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Ñ–ª–∞–≥—É

            try:
                app.send_message(username, message)
                write_log(username, flag, "SUCCESS")
                print(f"Message successfully sent to {username} with flag '{flag}'")
            except Exception as e:
                write_log(username, flag, "FAIL", str(e))
                print(f"Failed to send message to {username}. Error: {e}")

    print("Finished send_messages")

# –ó–∞–ø—É—Å–∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
send_messages()
schedule.every(10).minutes.do(send_messages)  # –ü–æ–≤—Ç–æ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
while True:
    schedule.run_pending()
    time.sleep(60)
